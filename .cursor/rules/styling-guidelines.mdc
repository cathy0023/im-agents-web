---
globs: *.tsx,*.css,src/components/**/*
---

# 样式开发指南

## 🎨 Tailwind CSS 优先原则

### ✅ 统一样式方案
- **仅使用 Tailwind CSS** 进行样式设计
- **配合 shadcn UI** 组件的预设样式
- 使用 [cn 工具函数](mdc:src/lib/utils.ts) 合并类名

### 基础用法
```typescript
// ✅ 使用 Tailwind 类名
<div className="flex items-center justify-between p-4 bg-white border rounded-lg shadow-sm">

// ✅ 使用 cn 函数合并条件样式
import { cn } from '@/lib/utils'

<div className={cn(
  "base-styles flex items-center p-4",
  isActive && "bg-blue-50 border-blue-200",
  disabled && "opacity-50 cursor-not-allowed"
)}>
```

### ❌ 禁止的样式方案
```typescript
// ❌ 禁止内联样式
<div style={{display: 'flex', alignItems: 'center'}}>

// ❌ 禁止传统 CSS 模块
import styles from './Component.module.css'

// ❌ 禁止 CSS-in-JS
const StyledDiv = styled.div`
  display: flex;
`
```

## 🎯 shadcn UI 样式集成

### 使用 shadcn 变量系统
```typescript
// ✅ 使用 shadcn 的设计令牌
<div className="bg-background text-foreground border border-border">

// ✅ 使用 shadcn 的颜色系统
<Button variant="default">主要按钮</Button>
<Button variant="outline">次要按钮</Button>
<Button variant="ghost">透明按钮</Button>

// ✅ 使用 shadcn 的尺寸系统
<Button size="sm">小按钮</Button>
<Button size="default">默认按钮</Button>
<Button size="lg">大按钮</Button>
```

### 扩展 shadcn 组件样式
```typescript
// ✅ 通过 className 扩展样式
<Button className="w-full mt-4">
  自定义宽度和间距
</Button>

// ✅ 使用 cn 函数组合样式
<Card className={cn(
  "hover:shadow-lg transition-shadow",
  isSelected && "ring-2 ring-primary"
)}>
```

## 📐 响应式设计规范

### 断点使用
```typescript
// ✅ 移动端优先设计
<div className="w-full md:w-1/2 lg:w-1/3 xl:w-1/4">

// ✅ 响应式文字大小
<h1 className="text-lg md:text-xl lg:text-2xl xl:text-3xl">

// ✅ 响应式间距
<div className="p-4 md:p-6 lg:p-8">

// ✅ 响应式显示/隐藏
<div className="hidden md:block">桌面端显示</div>
<div className="block md:hidden">移动端显示</div>
```

### 常用响应式模式
```typescript
// ✅ 卡片网格布局
<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">

// ✅ 导航栏响应式
<nav className="flex flex-col md:flex-row md:items-center gap-4">

// ✅ 侧边栏布局
<div className="flex flex-col lg:flex-row">
  <aside className="w-full lg:w-64">侧边栏</aside>
  <main className="flex-1">主内容</main>
</div>
```

## 🎨 设计系统规范

### 颜色使用
```typescript
// ✅ 使用 shadcn 的语义化颜色
<div className="bg-primary text-primary-foreground">   // 主色
<div className="bg-secondary text-secondary-foreground"> // 次要色
<div className="bg-muted text-muted-foreground">       // 静音色
<div className="bg-destructive text-destructive-foreground"> // 危险色

// ✅ 状态颜色
<div className="bg-green-50 text-green-700 border-green-200"> // 成功
<div className="bg-yellow-50 text-yellow-700 border-yellow-200"> // 警告
<div className="bg-red-50 text-red-700 border-red-200">     // 错误
```

### 间距系统
```typescript
// ✅ 使用一致的间距尺度
<div className="p-2">   // 8px
<div className="p-4">   // 16px
<div className="p-6">   // 24px
<div className="p-8">   // 32px

// ✅ 组件间距
<div className="space-y-4">  // 垂直间距
<div className="space-x-4">  // 水平间距
```

### 阴影和边框
```typescript
// ✅ 使用预定义的阴影
<div className="shadow-sm">   // 小阴影
<div className="shadow-md">   // 中等阴影
<div className="shadow-lg">   // 大阴影

// ✅ 边框样式
<div className="border border-border rounded-md">
<div className="border-2 border-primary rounded-lg">
```

## 🚀 动画和交互

### 过渡效果
```typescript
// ✅ 使用 Tailwind 过渡类
<button className="transition-colors hover:bg-gray-100">
<div className="transition-all duration-300 hover:scale-105">
<div className="transition-transform hover:translate-y-1">

// ✅ shadcn 动画类（通过 tailwindcss-animate）
<div className="animate-fade-in">
<div className="animate-slide-up">
```

### 悬停和焦点状态
```typescript
// ✅ 交互状态
<button className="hover:bg-gray-100 focus:ring-2 focus:ring-primary">
<input className="focus:border-primary focus:ring-1 focus:ring-primary">

// ✅ 禁用状态
<button className="disabled:opacity-50 disabled:cursor-not-allowed">
```

## 📱 移动端优化

### 触摸友好设计
```typescript
// ✅ 足够的触摸目标大小
<button className="min-h-[44px] min-w-[44px] p-2">

// ✅ 移动端手势支持
<div className="overflow-x-auto">
<div className="touch-pan-x">
```

### 移动端特定样式
```typescript
// ✅ 移动端安全区域
<div className="pb-safe"> // 底部安全区域

// ✅ 移动端视口单位
<div className="h-screen md:h-auto"> // 移动端全屏高度
```

## 🔧 性能优化

### 样式性能
```typescript
// ✅ 避免复杂的选择器
<div className="flex items-center"> // 简单直接

// ✅ 使用 Tailwind 的 JIT 模式
// 自动删除未使用的样式

// ✅ 合理使用 transform
<div className="transform hover:scale-105"> // GPU 加速
```

## 📏 组件样式模式

### 容器组件
```typescript
// ✅ 页面容器
<div className="min-h-screen bg-background">
  <div className="container mx-auto px-4 py-8">
    内容
  </div>
</div>

// ✅ 卡片容器
<Card className="w-full max-w-md mx-auto">
  <CardHeader>
    <CardTitle>标题</CardTitle>
  </CardHeader>
  <CardContent>
    内容
  </CardContent>
</Card>
```

### 布局组件
```typescript
// ✅ 弹性布局
<div className="flex flex-col md:flex-row gap-4">
  <div className="flex-1">主内容</div>
  <div className="w-full md:w-80">侧边栏</div>
</div>

// ✅ 网格布局
<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
  {items.map(item => (
    <Card key={item.id}>内容</Card>
  ))}
</div>
```

## ✅ 样式检查清单

### 开发时检查
- [ ] 是否使用了 shadcn UI 组件？
- [ ] 是否仅使用 Tailwind CSS？
- [ ] 是否使用了 cn 函数合并类名？
- [ ] 是否考虑了响应式设计？

### 完成时检查
- [ ] 在不同屏幕尺寸下表现正常？
- [ ] 交互状态（hover、focus）是否正确？
- [ ] 是否符合项目设计规范？
- [ ] 性能是否良好（无过度复杂的样式）？